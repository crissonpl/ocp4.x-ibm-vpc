# REMOVE AFTER TESTING - FILE COPY SHOLD HAPPEN ONLY AT THE BEGINING 
#### Debug 1
#- name: Ansible copy directory to the remote server
#  copy:
#    src: "{{ ansible_files_dir_local }}/files/dnsmasq/cluster.conf"
#    dest: "{{ ansible_files_dir_remote }}/files/dnsmasq/cluster.conf"
#  become: yes

#- name: Ansible copy directory to the remote server
#  copy:
#    src: "{{ ansible_files_dir_local }}/files/haproxy.cfg"
#    dest: "{{ ansible_files_dir_remote }}/files/haproxy.cfg"
#  become: yes


- name: Copy DNSMasq configutation file
  copy:
      src: "{{ ansible_files_dir_remote }}/files/dnsmasq/cluster.conf"
      dest: "/etc/dnsmasq.d/cluster.conf"
      remote_src: yes
  become: yes

- name: "Replace hostname names in cluster.conf file"
  replace: 
      path: "/etc/dnsmasq.d/cluster.conf"
      regexp: 'mycluster.example.com'
      replace: "{{ host_name }}"
  become: yes

- name: Restart service dnsmasq
  systemd:
       name: dnsmasq
       daemon_reload: yes
  become: yes
  #notify: dnsmasq restart  

- name: Check if haproxy is alreay installed 
  block:

    - name: Ansible check directory exists /etc/haproxy
      stat:
        path: /etc/haproxy
      register: dir_exists

    - name: Exit if /etc/haproxy directory exists
      shell: return 1
      when: dir_exists.stat.exists

    - name: Ensure haproxy download and install dir exist
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ haproxy_download_dir }}"
        - "{{ haproxy_configuration_dir }}"

    - name: Install haproxy
      apt:
        name: haproxy
        update_cache: yes
        state: present

    - name: Start haproxy
      systemd:
         name: haproxy
         state: started
         enabled: yes

    - name: Copy file and set up the permission and owner of the file
      copy:
        src: "/etc/haproxy/haproxy.cfg"
        dest: "/etc/haproxy/haproxy.cfg.bak"
        remote_src: yes
        #mode: 0755     #### Debug 1
        force: no
      ignore_errors: true

    - name: "Replace hostname names in haproxy.cfg"
      replace:
         path: "{{ ansible_files_dir_remote }}/files/haproxy.cfg"
         regexp: 'mycluster.example.com'
         replace: '{{ host_name }}'
      become: yes

    - name: Append content to /etc/haproxy/haproxy.cfg
      shell: 'if grep {{ host_name }} {{ haproxy_cfg_file_path }}; then true; else cat {{ ansible_files_dir_remote }}/files/haproxy.cfg  >> {{ haproxy_cfg_file_path }};fi'

    - name: Enable haproxy and reload daemon
      systemd:
         name: haproxy
         enabled: yes
         state: restarted
      become: yes

  rescue:
    - debug: msg="Either /etc/haproxy already exists or Restart failed"


